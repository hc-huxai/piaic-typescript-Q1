{"mappings":"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","sources":["node_modules/prompt-sync/index.js","node_modules/strip-ansi/index.js","node_modules/ansi-regex/index.js","week-5/index.ts","week-5/exercises/index.ts","week-5/exercises/exercise-01.ts","week-5/exercises/exercise-02.ts","week-5/exercises/exercise-03.ts","EOA-Functions/index.ts","EOA-Functions/spacer.ts","EOA-Functions/getInput.ts","week-5/exercises/exercise-04.ts","week-5/exercises/exercise-05.ts","week-5/exercises/exercise-06.ts","week-5/exercises/exercise-07.ts","week-5/exercises/exercise-08.ts","week-5/exercises/exercise-09.ts","week-5/exercises/exercise-10.ts"],"sourcesContent":["'use strict'\n\nvar fs = require('fs');\nvar stripAnsi = require('strip-ansi');\nvar term = 13; // carriage return\n\n/**\n * create -- sync function for reading user input from stdin\n * @param   {Object} config {\n *   sigint: {Boolean} exit on ^C\n *   autocomplete: {StringArray} function({String})\n *   history: {String} a history control object (see `prompt-sync-history`)\n * }\n * @returns {Function} prompt function\n */\n\n // for ANSI escape codes reference see https://en.wikipedia.org/wiki/ANSI_escape_code\n\nfunction create(config) {\n\n  config = config || {};\n  var sigint = config.sigint;\n  var eot = config.eot;\n  var autocomplete = config.autocomplete =\n    config.autocomplete || function(){return []};\n  var history = config.history;\n  prompt.history = history || {save: function(){}};\n  prompt.hide = function (ask) { return prompt(ask, {echo: ''}) };\n\n  return prompt;\n\n\n  /**\n   * prompt -- sync function for reading user input from stdin\n   *  @param {String} ask opening question/statement to prompt for\n   *  @param {String} value initial value for the prompt\n   *  @param   {Object} opts {\n   *   echo: set to a character to be echoed, default is '*'. Use '' for no echo\n   *   value: {String} initial value for the prompt\n   *   ask: {String} opening question/statement to prompt for, does not override ask param\n   *   autocomplete: {StringArray} function({String})\n   * }\n   *\n   * @returns {string} Returns the string input or (if sigint === false)\n   *                   null if user terminates with a ^C\n   */\n\n\n  function prompt(ask, value, opts) {\n    var insert = 0, savedinsert = 0, res, i, savedstr;\n    opts = opts || {};\n\n    if (Object(ask) === ask) {\n      opts = ask;\n      ask = opts.ask;\n    } else if (Object(value) === value) {\n      opts = value;\n      value = opts.value;\n    }\n    ask = ask || '';\n    var echo = opts.echo;\n    var masked = 'echo' in opts;\n    autocomplete = opts.autocomplete || autocomplete;\n\n    var fd = (process.platform === 'win32') ?\n      process.stdin.fd :\n      fs.openSync('/dev/tty', 'rs');\n\n    var wasRaw = process.stdin.isRaw;\n    if (!wasRaw) { process.stdin.setRawMode && process.stdin.setRawMode(true); }\n\n    var buf = Buffer.alloc(3);\n    var str = '', character, read;\n\n    savedstr = '';\n\n    if (ask) {\n      process.stdout.write(ask);\n    }\n\n    var cycle = 0;\n    var prevComplete;\n\n    while (true) {\n      read = fs.readSync(fd, buf, 0, 3);\n      if (read > 1) { // received a control sequence\n        switch(buf.toString()) {\n          case '\\u001b[A':  //up arrow\n            if (masked) break;\n            if (!history) break;\n            if (history.atStart()) break;\n\n            if (history.atEnd()) {\n              savedstr = str;\n              savedinsert = insert;\n            }\n            str = history.prev();\n            insert = str.length;\n            process.stdout.write('\\u001b[2K\\u001b[0G' + ask + str);\n            break;\n          case '\\u001b[B':  //down arrow\n            if (masked) break;\n            if (!history) break;\n            if (history.pastEnd()) break;\n\n            if (history.atPenultimate()) {\n              str = savedstr;\n              insert = savedinsert;\n              history.next();\n            } else {\n              str = history.next();\n              insert = str.length;\n            }\n            process.stdout.write('\\u001b[2K\\u001b[0G'+ ask + str + '\\u001b['+(insert+ask.length+1)+'G');\n            break;\n          case '\\u001b[D': //left arrow\n            if (masked) break;\n            var before = insert;\n            insert = (--insert < 0) ? 0 : insert;\n            if (before - insert)\n              process.stdout.write('\\u001b[1D');\n            break;\n          case '\\u001b[C': //right arrow\n            if (masked) break;\n            insert = (++insert > str.length) ? str.length : insert;\n            process.stdout.write('\\u001b[' + (insert+ask.length+1) + 'G');\n            break;\n          default:\n            if (buf.toString()) {\n              str = str + buf.toString();\n              str = str.replace(/\\0/g, '');\n              insert = str.length;\n              promptPrint(masked, ask, echo, str, insert);\n              process.stdout.write('\\u001b[' + (insert+ask.length+1) + 'G');\n              buf = Buffer.alloc(3);\n            }\n        }\n        continue; // any other 3 character sequence is ignored\n      }\n\n      // if it is not a control character seq, assume only one character is read\n      character = buf[read-1];\n\n      // catch a ^C and return null\n      if (character == 3){\n        process.stdout.write('^C\\n');\n        fs.closeSync(fd);\n\n        if (sigint) process.exit(130);\n\n        process.stdin.setRawMode && process.stdin.setRawMode(wasRaw);\n\n        return null;\n      }\n\n      // catch a ^D and exit\n      if (character == 4) {\n        if (str.length == 0 && eot) {\n          process.stdout.write('exit\\n');\n          process.exit(0);\n        }\n      }\n\n      // catch the terminating character\n      if (character == term) {\n        fs.closeSync(fd);\n        if (!history) break;\n        if (!masked && str.length) history.push(str);\n        history.reset();\n        break;\n      }\n\n      // catch a TAB and implement autocomplete\n      if (character == 9) { // TAB\n        res = autocomplete(str);\n\n        if (str == res[0]) {\n          res = autocomplete('');\n        } else {\n          prevComplete = res.length;\n        }\n\n        if (res.length == 0) {\n          process.stdout.write('\\t');\n          continue;\n        }\n\n        var item = res[cycle++] || res[cycle = 0, cycle++];\n\n        if (item) {\n          process.stdout.write('\\r\\u001b[K' + ask + item);\n          str = item;\n          insert = item.length;\n        }\n      }\n\n      if (character == 127 || (process.platform == 'win32' && character == 8)) { //backspace\n        if (!insert) continue;\n        str = str.slice(0, insert-1) + str.slice(insert);\n        insert--;\n        process.stdout.write('\\u001b[2D');\n      } else {\n        if ((character < 32 ) || (character > 126))\n            continue;\n        str = str.slice(0, insert) + String.fromCharCode(character) + str.slice(insert);\n        insert++;\n      };\n\n      promptPrint(masked, ask, echo, str, insert);\n\n    }\n\n    process.stdout.write('\\n')\n\n    process.stdin.setRawMode && process.stdin.setRawMode(wasRaw);\n\n    return str || value || '';\n  };\n\n\n  function promptPrint(masked, ask, echo, str, insert) {\n    if (masked) {\n        process.stdout.write('\\u001b[2K\\u001b[0G' + ask + Array(str.length+1).join(echo));\n    } else {\n      process.stdout.write('\\u001b[s');\n      if (insert == str.length) {\n          process.stdout.write('\\u001b[2K\\u001b[0G'+ ask + str);\n      } else {\n        if (ask) {\n          process.stdout.write('\\u001b[2K\\u001b[0G'+ ask + str);\n        } else {\n          process.stdout.write('\\u001b[2K\\u001b[0G'+ str + '\\u001b[' + (str.length - insert) + 'D');\n        }\n      }\n\n      // Reposition the cursor to the right of the insertion point\n      var askLength = stripAnsi(ask).length;\n      process.stdout.write(`\\u001b[${askLength+1+(echo==''? 0:insert)}G`);\n    }\n  }\n};\n\nmodule.exports = create;\n","'use strict';\nconst ansiRegex = require('ansi-regex');\n\nconst stripAnsi = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n\nmodule.exports = stripAnsi;\nmodule.exports.default = stripAnsi;\n","'use strict';\n\nmodule.exports = options => {\n\toptions = Object.assign({\n\t\tonlyFirst: false\n\t}, options);\n\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, options.onlyFirst ? undefined : 'g');\n};\n","import {\r\n  Exercise01,\r\n  Exercise02,\r\n  Exercise03,\r\n  Exercise04,\r\n  Exercise05,\r\n  Exercise06,\r\n  Exercise07,\r\n  Exercise08,\r\n  Exercise09,\r\n  Exercise10,\r\n} from \"./exercises/index\";\r\nimport { Spacer } from \"../EOA-Functions\";\r\n\r\nconst getInput = require(\"prompt-sync\")({ sigint: true });\r\n\r\nlet exercises: Array<{ name: string; exerciseFn: () => void }> = [\r\n  { name: \"To-Do List | Array Splice Method\", exerciseFn: () => Exercise01() },\r\n  {\r\n    name: \"Print Arithmetic Table using While Loop\",\r\n    exerciseFn: () => Exercise02(),\r\n  },\r\n  {\r\n    name: \"Add a value at specified index in the given array.\",\r\n    exerciseFn: () =>\r\n      Exercise03([\"Hello\", \"Everyone\", \"Name\", \"is\", \"Hamza\"], 2, \"My\"),\r\n  },\r\n  { name: \"Functioning Shopping Cart\", exerciseFn: () => Exercise04() },\r\n  {\r\n    name: \"Print first 25 Integers using 'while loop'.\",\r\n    exerciseFn: () => Exercise05(),\r\n  },\r\n  {\r\n    name: \"Print first 10 even numbers using 'while loop'.\",\r\n    exerciseFn: () => Exercise06(),\r\n  },\r\n  {\r\n    name: \"Calculate Factorial\",\r\n    exerciseFn: () => Exercise07(),\r\n  },\r\n  {\r\n    name: \"Remove Number from Array if Negative\",\r\n    exerciseFn: () => Exercise08(),\r\n  },\r\n  {\r\n    name: \"Find Sum of Numbers Stored in Array\",\r\n    exerciseFn: () => Exercise09(),\r\n  },\r\n  {\r\n    name: \"Convert List of °C Temperatures to °F\",\r\n    exerciseFn: () => Exercise10(),\r\n  },\r\n];\r\n\r\nconsole.log(`/************************/`);\r\nconsole.log(`Choose Exercise #`);\r\nconsole.log(`/************************/`);\r\n\r\nexercises.forEach((element, index) => {\r\n  Spacer();\r\n  console.log(`${index + 1} - ${element[\"name\"]}`);\r\n});\r\n\r\nSpacer();\r\nconsole.log(`e - Exit`);\r\n\r\nSpacer();\r\nlet exercise_no = getInput(\"Enter Exercise # to Run: \");\r\n\r\nlet runExerciseNo =\r\n  exercise_no == \"e\" || (exercise_no >= 1 && exercise_no <= exercises.length);\r\n\r\nwhile (runExerciseNo == false) {\r\n  exercise_no = getInput(\"Please Enter Exercise # to Run: \");\r\n}\r\n\r\nlet exitProgram = exercise_no == `e`;\r\n\r\nwhile (!exitProgram) {\r\n  console.log(`==================`);\r\n  console.log(`Exercise ${exercise_no}: ${exercises[exercise_no - 1].name}`);\r\n  console.log(`==================`);\r\n\r\n  Spacer();\r\n  exercises[exercise_no - 1].exerciseFn();\r\n\r\n  Spacer(2);\r\n\r\n  getInput(\"Press Enter to Continue...\");\r\n\r\n  Spacer();\r\n\r\n  console.log(`/************************/`);\r\n  console.log(`Choose Exercise #`);\r\n  console.log(`/************************/`);\r\n\r\n  exercises.forEach((element, index) => {\r\n    Spacer();\r\n    console.log(`${index + 1} - ${element[\"name\"]}`);\r\n  });\r\n\r\n  Spacer();\r\n  console.log(`e - Exit`);\r\n  exercise_no = getInput(\"Enter Exercise # to Run: \");\r\n  exitProgram = exercise_no == \"e\";\r\n}\r\n\r\nconsole.log(`Exit`);\r\n\r\nprocess.exit(0);\r\n","import Exercise01 from \"./exercise-01\";\r\nimport Exercise02 from \"./exercise-02\";\r\nimport Exercise03 from \"./exercise-03\";\r\nimport Exercise04 from \"./exercise-04\";\r\nimport Exercise05 from \"./exercise-05\";\r\nimport Exercise06 from \"./exercise-06\";\r\nimport Exercise07 from \"./exercise-07\";\r\nimport Exercise08 from \"./exercise-08\";\r\nimport Exercise09 from \"./exercise-09\";\r\nimport Exercise10 from \"./exercise-10\";\r\n\r\nexport {\r\n  Exercise01,\r\n  Exercise02,\r\n  Exercise03,\r\n  Exercise04,\r\n  Exercise05,\r\n  Exercise06,\r\n  Exercise07,\r\n  Exercise08,\r\n  Exercise09,\r\n  Exercise10,\r\n};\r\n","const Exercise01 = () => {\r\n  let tasks: string[] = [\r\n    \"Learn Python\",\r\n    \"Learn TypeScript\",\r\n    \"Learn Flutter\",\r\n    \"Learn ML\",\r\n  ];\r\n\r\n  tasks.forEach((task, index) => {\r\n    console.log(`${index + 1}. ${task}`);\r\n  });\r\n\r\n  const evenToDo = (array: string[]) => {\r\n    array.splice(array.length / 2 - 1, 2);\r\n  };\r\n\r\n  const oddToDo = (array: string[]) => {\r\n    array.splice(Math.floor(array.length / 2), 1);\r\n  };\r\n\r\n  tasks.length % 2 == 0 ? evenToDo(tasks) : oddToDo(tasks);\r\n  console.log(tasks);\r\n};\r\n\r\nexport default Exercise01;\r\n","const Exercise02 = () => {\r\n  let getInput = require(\"prompt-sync\")({ sigint: true });\r\n  let tableNum: number = Number(getInput(\"Enter any number => \"));\r\n  for (let i = 1; i <= 10; i++) {\r\n    console.log(`${tableNum} x ${i} = ${tableNum * i}`);\r\n  }\r\n};\r\n\r\nexport default Exercise02;\r\n","import { Spacer } from \"../../EOA-Functions\";\r\n\r\nconst Exercise03 = (array: any[], index: number, value: any) => {\r\n  console.log(`Inserting value \"${value}\" at index ${index} of array =>`);\r\n  console.log(array);\r\n\r\n  array.splice(index, 0, value);\r\n\r\n  Spacer();\r\n\r\n  console.log(`Modified Array => `, array);\r\n};\r\n\r\nexport default Exercise03;\r\n","import Spacer from \"./spacer\";\r\nimport getInput from \"./getInput\";\r\n\r\nexport { Spacer, getInput };\r\n","const Spacer = (numOfSpaces?: number) => {\r\n  if (numOfSpaces == undefined) {\r\n    console.log();\r\n  } else {\r\n    for (let i = 1; i <= numOfSpaces; i++) {\r\n      console.log();\r\n    }\r\n  }\r\n};\r\n\r\nexport default Spacer;\r\n","const getInput = require(\"prompt-sync\")({ sigint: true });\r\n\r\nexport default getInput;\r\n","const getInput = require(\"prompt-sync\")({ sigint: true });\r\nimport { Spacer } from \"../../EOA-Functions\";\r\n\r\nconst Exercise04 = () => {\r\n  let cartItems: Array<{ name: string; quantity: number }> = [\r\n    { name: \"blue shirts\", quantity: 2 },\r\n    { name: \"black pants\", quantity: 2 },\r\n    { name: \"blue trousers\", quantity: 2 },\r\n  ];\r\n\r\n  const listCartItems = (cart: Array<{ name: string; quantity: number }>) => {\r\n    cart.forEach((element, index) => {\r\n      let tempArray = element.name.split(\" \");\r\n      let itemName: string = \"\";\r\n      if (tempArray.length > 1) {\r\n        tempArray.forEach((name) => {\r\n          itemName +=\r\n            name[0].toUpperCase() + name.substr(1).toLowerCase() + \" \";\r\n        });\r\n      } else {\r\n        itemName =\r\n          element.name[0].toUpperCase() + element.name.substr(1).toLowerCase();\r\n      }\r\n\r\n      console.log(\r\n        `${index + 1}. ${itemName.trim()} | Quantity: ${element.quantity}`\r\n      );\r\n    });\r\n  };\r\n\r\n  Spacer(2);\r\n  console.log(`Cart =>`);\r\n  listCartItems(cartItems);\r\n\r\n  Spacer();\r\n\r\n  let action: string = \"\";\r\n\r\n  const getAction = () => {\r\n    Spacer(2);\r\n    console.log(`Actions:`);\r\n    console.log(`l - List Items in Cart`);\r\n    console.log(`a - Add Item to Cart`);\r\n    console.log(`r - Remove Item From Cart`);\r\n    console.log(`u - Update Name/Item in Cart`);\r\n    console.log(`c - Clear All Items In Cart`);\r\n    console.log(`e - exit`);\r\n\r\n    Spacer();\r\n\r\n    action = getInput(\"Enter Action Shortcut => \");\r\n  };\r\n  getAction();\r\n  // Actions' Function\r\n  // Add\r\n  const addItem = (array: Array<{ name: string; quantity: number }>) => {\r\n    let item: string = getInput(\"Enter Item Name => \");\r\n    let itemQuantity: number = getInput(\"Enter Item Quantity => \");\r\n\r\n    let exit: string = \"\";\r\n\r\n    if (item == null && itemQuantity == null) {\r\n      exit = getInput(\"Do you want to exit (Y/N)? \");\r\n    }\r\n\r\n    if (!itemQuantity) {\r\n      console.log(\r\n        `Item Quantity was not specified. So item is added with quantity '1'.`\r\n      );\r\n      itemQuantity = 1;\r\n    }\r\n\r\n    if (exit == \"Y\") {\r\n    } else {\r\n      array.push({ name: item, quantity: itemQuantity });\r\n      Spacer();\r\n      console.log(`Item \"${item}\" with quantity ${itemQuantity} added.`);\r\n      Spacer();\r\n    }\r\n  };\r\n\r\n  // Remove\r\n  const removeItemFromCart = (\r\n    array: Array<{ name: string; quantity: number }>\r\n  ) => {\r\n    listCartItems(array);\r\n    Spacer();\r\n    let itemToRemoveIndex = getInput(\r\n      `Which Item # Do You Want to Remove? (1-${array.length}) `\r\n    );\r\n    array.splice(itemToRemoveIndex - 1, 1);\r\n    Spacer();\r\n    console.log(\"Removed\");\r\n  };\r\n\r\n  // Update\r\n  const updateCart = (array: Array<{ name: string; quantity: number }>) => {\r\n    listCartItems(array);\r\n    Spacer();\r\n    let itemToUpdateIndex = getInput(\r\n      `Which Item # Do You Want to Update? (1-${array.length}) `\r\n    );\r\n    console.log(`Leave empty if don't want to change.`);\r\n    let updatedItemName = getInput(\"Updated Item Name => \");\r\n    let updatedItemQuantity = parseInt(getInput(\"Updated Item Quantity => \"));\r\n    updatedItemQuantity = !updatedItemQuantity\r\n      ? array[itemToUpdateIndex - 1].quantity\r\n      : updatedItemQuantity;\r\n    array.splice(itemToUpdateIndex - 1, 1, {\r\n      name: updatedItemName,\r\n      quantity: updatedItemQuantity,\r\n    });\r\n    Spacer();\r\n    console.log(\"Updated\");\r\n  };\r\n\r\n  // Clear\r\n  const clearCart = () => {\r\n    cartItems = [];\r\n    console.log(`All items are removed from cart.`);\r\n  };\r\n\r\n  let shouldExit = action == \"e\" ? false : true;\r\n\r\n  while (shouldExit) {\r\n    switch (action) {\r\n      case \"a\": {\r\n        // add new item\r\n        addItem(cartItems);\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      case \"l\": {\r\n        // List all Items in Cart\r\n        listCartItems(cartItems);\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      case \"r\": {\r\n        // remove existing items from the cart\r\n        removeItemFromCart(cartItems);\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      case \"u\": {\r\n        // update quantities of an item already present on the cart\r\n        updateCart(cartItems);\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      case \"c\": {\r\n        // clear all items from the cart\r\n        clearCart();\r\n\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      default: {\r\n        action = getInput(\"Invalid Shortcut, Please Try Again => \");\r\n        break;\r\n      }\r\n    }\r\n    shouldExit = action == \"e\" ? false : true;\r\n  }\r\n  console.log(`Exited`);\r\n};\r\n\r\nexport default Exercise04;\r\n","// Print the first 25 integers using while loop.\r\nconst Exercise05 = () => {\r\n  let i = 1;\r\n  while (i <= 25) {\r\n    console.log(i);\r\n    i++;\r\n  }\r\n};\r\n\r\nexport default Exercise05;\r\n","// Print first 10 even numbers using while loop\r\nconst Exercise06 = () => {\r\n  let i = 1;\r\n  while (i <= 10) {\r\n    console.log(2 * i);\r\n    i++;\r\n  }\r\n};\r\n\r\nexport default Exercise06;\r\n","import { Spacer } from \"../../EOA-Functions\";\r\n\r\n// Create a function to input a positive number and calculates its factorial.\r\nconst Exercise07 = () => {\r\n  let getInput = require(\"prompt-sync\")({ sigint: true });\r\n  let number = getInput(\"Enter number for calculating factorial => \");\r\n  let factorial: number = 1;\r\n  while (number < 1) {\r\n    Spacer();\r\n    console.log(`The number is negative.`);\r\n    number = getInput(\"Please Enter a Positive Number => \");\r\n  }\r\n  number = Number(number);\r\n  console.log(`Given Number: ${number}`);\r\n\r\n  while (number >= 1) {\r\n    factorial *= number;\r\n    number--;\r\n  }\r\n  console.log(`Factorial: ${factorial}`);\r\n};\r\n\r\nexport default Exercise07;\r\n","const Exercise08 = () => {\r\n  let getInput = require(\"prompt-sync\")({ sigint: true });\r\n  // For taking input from user.\r\n  console.log(`Please Enter Numbers separated by a single space.`);\r\n  let numList = getInput(\"=> \");\r\n  let numArray = numList.split(\" \"); // Array to store the number entered by User.\r\n\r\n  for (let i = 0; i < numArray.length; i++) {\r\n    if (isNaN(numArray[i])) {\r\n      console.log(`${numArray[i]} is not a number`);\r\n    } else numArray[i] = Number(numArray[i]);\r\n  }\r\n\r\n  console.log(`Initial Array =>`, numArray);\r\n\r\n  let i = 0;\r\n  while (i < numArray.length) {\r\n    if (numArray[i] < 0) {\r\n      numArray.splice(i, 1);\r\n      i--;\r\n    } else {\r\n      i++;\r\n    }\r\n  }\r\n\r\n  console.log(`Array after Removing Negatives =>`, numArray);\r\n};\r\n\r\nexport default Exercise08;\r\n","// Calculate sum of numbers in array\r\nconst Exercise09 = () => {\r\n  let getInput = require(\"prompt-sync\")({ sigint: true });\r\n  // For taking input from user.\r\n  console.log(`Please Enter Numbers separated by a single space.`);\r\n  let numList = getInput(\"=> \");\r\n  let numArray = numList.split(\" \"); // Array to store the number entered by User.\r\n\r\n  for (let i = 0; i < numArray.length; i++) {\r\n    if (isNaN(numArray[i])) {\r\n      console.log(`${numArray[i]} is not a number`);\r\n    } else numArray[i] = Number(numArray[i]);\r\n  }\r\n  console.log(`Array of Numbers:-`);\r\n  console.log(numArray);\r\n\r\n  let sum: number = 0;\r\n  let index: number = 0;\r\n  while (index < numArray.length) {\r\n    if (isNaN(numArray[index])) {\r\n      console.log(`${numArray[index]} is not a number`);\r\n    } else sum += numArray[index];\r\n    index++;\r\n  }\r\n\r\n  console.log(`Sum: ${sum}`);\r\n};\r\n\r\nexport default Exercise09;\r\n","const Exercise10 = () => {\r\n  let getInput = require(\"prompt-sync\")({ sigint: true });\r\n  // For taking input from user.\r\n  console.log(`Please Enter Numbers separated by a single space.`);\r\n  let numList = getInput(\"=> \");\r\n  let celsius = numList.split(\" \"); // Array to store the number entered by User.\r\n\r\n  let fahrenheit = [];\r\n\r\n  var i = 0;\r\n  while (i < celsius.length) {\r\n    if (isNaN(Number(celsius[i]))) {\r\n      console.log(`${celsius[i]} is not a temperature`);\r\n    } else {\r\n      celsius[i] = Number(celsius[i]);\r\n      i++;\r\n    }\r\n  }\r\n\r\n  var i = 0;\r\n  while (i < celsius.length) {\r\n    fahrenheit.push(((9 / 5) * celsius[i] + 32).toFixed(2));\r\n    i++;\r\n  }\r\n\r\n  var i = 0;\r\n  while (i < fahrenheit.length) {\r\n    fahrenheit[i] = Number(fahrenheit[i]);\r\n    i++;\r\n  }\r\n\r\n  console.log(`Temperatures in °C => `, celsius);\r\n  console.log(`Temperatures in °F => `, fahrenheit);\r\n};\r\n\r\nexport default Exercise10;\r\n"],"names":[],"version":3,"file":"index.js.map"}