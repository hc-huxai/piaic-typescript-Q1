{"mappings":"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","sources":["node_modules/prompt-sync/index.js","node_modules/strip-ansi/index.js","node_modules/ansi-regex/index.js","week-7/index.ts","week-7/exercises/index.ts","week-7/exercises/exercise-01.ts","EOA-Functions/index.ts","EOA-Functions/spacer.ts","EOA-Functions/getInput.ts","week-7/exercises/exercise-02.ts","week-7/exercises/exercise-03.ts","week-7/exercises/exercise-04.ts","week-7/exercises/exercise-05.ts","week-7/exercises/exercise-06.ts","week-7/exercises/exercise-07.ts","week-7/exercises/exercise-08.ts"],"sourcesContent":["'use strict'\n\nvar fs = require('fs');\nvar stripAnsi = require('strip-ansi');\nvar term = 13; // carriage return\n\n/**\n * create -- sync function for reading user input from stdin\n * @param   {Object} config {\n *   sigint: {Boolean} exit on ^C\n *   autocomplete: {StringArray} function({String})\n *   history: {String} a history control object (see `prompt-sync-history`)\n * }\n * @returns {Function} prompt function\n */\n\n // for ANSI escape codes reference see https://en.wikipedia.org/wiki/ANSI_escape_code\n\nfunction create(config) {\n\n  config = config || {};\n  var sigint = config.sigint;\n  var eot = config.eot;\n  var autocomplete = config.autocomplete =\n    config.autocomplete || function(){return []};\n  var history = config.history;\n  prompt.history = history || {save: function(){}};\n  prompt.hide = function (ask) { return prompt(ask, {echo: ''}) };\n\n  return prompt;\n\n\n  /**\n   * prompt -- sync function for reading user input from stdin\n   *  @param {String} ask opening question/statement to prompt for\n   *  @param {String} value initial value for the prompt\n   *  @param   {Object} opts {\n   *   echo: set to a character to be echoed, default is '*'. Use '' for no echo\n   *   value: {String} initial value for the prompt\n   *   ask: {String} opening question/statement to prompt for, does not override ask param\n   *   autocomplete: {StringArray} function({String})\n   * }\n   *\n   * @returns {string} Returns the string input or (if sigint === false)\n   *                   null if user terminates with a ^C\n   */\n\n\n  function prompt(ask, value, opts) {\n    var insert = 0, savedinsert = 0, res, i, savedstr;\n    opts = opts || {};\n\n    if (Object(ask) === ask) {\n      opts = ask;\n      ask = opts.ask;\n    } else if (Object(value) === value) {\n      opts = value;\n      value = opts.value;\n    }\n    ask = ask || '';\n    var echo = opts.echo;\n    var masked = 'echo' in opts;\n    autocomplete = opts.autocomplete || autocomplete;\n\n    var fd = (process.platform === 'win32') ?\n      process.stdin.fd :\n      fs.openSync('/dev/tty', 'rs');\n\n    var wasRaw = process.stdin.isRaw;\n    if (!wasRaw) { process.stdin.setRawMode && process.stdin.setRawMode(true); }\n\n    var buf = Buffer.alloc(3);\n    var str = '', character, read;\n\n    savedstr = '';\n\n    if (ask) {\n      process.stdout.write(ask);\n    }\n\n    var cycle = 0;\n    var prevComplete;\n\n    while (true) {\n      read = fs.readSync(fd, buf, 0, 3);\n      if (read > 1) { // received a control sequence\n        switch(buf.toString()) {\n          case '\\u001b[A':  //up arrow\n            if (masked) break;\n            if (!history) break;\n            if (history.atStart()) break;\n\n            if (history.atEnd()) {\n              savedstr = str;\n              savedinsert = insert;\n            }\n            str = history.prev();\n            insert = str.length;\n            process.stdout.write('\\u001b[2K\\u001b[0G' + ask + str);\n            break;\n          case '\\u001b[B':  //down arrow\n            if (masked) break;\n            if (!history) break;\n            if (history.pastEnd()) break;\n\n            if (history.atPenultimate()) {\n              str = savedstr;\n              insert = savedinsert;\n              history.next();\n            } else {\n              str = history.next();\n              insert = str.length;\n            }\n            process.stdout.write('\\u001b[2K\\u001b[0G'+ ask + str + '\\u001b['+(insert+ask.length+1)+'G');\n            break;\n          case '\\u001b[D': //left arrow\n            if (masked) break;\n            var before = insert;\n            insert = (--insert < 0) ? 0 : insert;\n            if (before - insert)\n              process.stdout.write('\\u001b[1D');\n            break;\n          case '\\u001b[C': //right arrow\n            if (masked) break;\n            insert = (++insert > str.length) ? str.length : insert;\n            process.stdout.write('\\u001b[' + (insert+ask.length+1) + 'G');\n            break;\n          default:\n            if (buf.toString()) {\n              str = str + buf.toString();\n              str = str.replace(/\\0/g, '');\n              insert = str.length;\n              promptPrint(masked, ask, echo, str, insert);\n              process.stdout.write('\\u001b[' + (insert+ask.length+1) + 'G');\n              buf = Buffer.alloc(3);\n            }\n        }\n        continue; // any other 3 character sequence is ignored\n      }\n\n      // if it is not a control character seq, assume only one character is read\n      character = buf[read-1];\n\n      // catch a ^C and return null\n      if (character == 3){\n        process.stdout.write('^C\\n');\n        fs.closeSync(fd);\n\n        if (sigint) process.exit(130);\n\n        process.stdin.setRawMode && process.stdin.setRawMode(wasRaw);\n\n        return null;\n      }\n\n      // catch a ^D and exit\n      if (character == 4) {\n        if (str.length == 0 && eot) {\n          process.stdout.write('exit\\n');\n          process.exit(0);\n        }\n      }\n\n      // catch the terminating character\n      if (character == term) {\n        fs.closeSync(fd);\n        if (!history) break;\n        if (!masked && str.length) history.push(str);\n        history.reset();\n        break;\n      }\n\n      // catch a TAB and implement autocomplete\n      if (character == 9) { // TAB\n        res = autocomplete(str);\n\n        if (str == res[0]) {\n          res = autocomplete('');\n        } else {\n          prevComplete = res.length;\n        }\n\n        if (res.length == 0) {\n          process.stdout.write('\\t');\n          continue;\n        }\n\n        var item = res[cycle++] || res[cycle = 0, cycle++];\n\n        if (item) {\n          process.stdout.write('\\r\\u001b[K' + ask + item);\n          str = item;\n          insert = item.length;\n        }\n      }\n\n      if (character == 127 || (process.platform == 'win32' && character == 8)) { //backspace\n        if (!insert) continue;\n        str = str.slice(0, insert-1) + str.slice(insert);\n        insert--;\n        process.stdout.write('\\u001b[2D');\n      } else {\n        if ((character < 32 ) || (character > 126))\n            continue;\n        str = str.slice(0, insert) + String.fromCharCode(character) + str.slice(insert);\n        insert++;\n      };\n\n      promptPrint(masked, ask, echo, str, insert);\n\n    }\n\n    process.stdout.write('\\n')\n\n    process.stdin.setRawMode && process.stdin.setRawMode(wasRaw);\n\n    return str || value || '';\n  };\n\n\n  function promptPrint(masked, ask, echo, str, insert) {\n    if (masked) {\n        process.stdout.write('\\u001b[2K\\u001b[0G' + ask + Array(str.length+1).join(echo));\n    } else {\n      process.stdout.write('\\u001b[s');\n      if (insert == str.length) {\n          process.stdout.write('\\u001b[2K\\u001b[0G'+ ask + str);\n      } else {\n        if (ask) {\n          process.stdout.write('\\u001b[2K\\u001b[0G'+ ask + str);\n        } else {\n          process.stdout.write('\\u001b[2K\\u001b[0G'+ str + '\\u001b[' + (str.length - insert) + 'D');\n        }\n      }\n\n      // Reposition the cursor to the right of the insertion point\n      var askLength = stripAnsi(ask).length;\n      process.stdout.write(`\\u001b[${askLength+1+(echo==''? 0:insert)}G`);\n    }\n  }\n};\n\nmodule.exports = create;\n","'use strict';\nconst ansiRegex = require('ansi-regex');\n\nconst stripAnsi = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n\nmodule.exports = stripAnsi;\nmodule.exports.default = stripAnsi;\n","'use strict';\n\nmodule.exports = options => {\n\toptions = Object.assign({\n\t\tonlyFirst: false\n\t}, options);\n\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, options.onlyFirst ? undefined : 'g');\n};\n","import {\r\n  Exercise01,\r\n  Exercise02,\r\n  Exercise03,\r\n  Exercise04,\r\n  Exercise05,\r\n  Exercise06,\r\n  Exercise07,\r\n  Exercise08,\r\n} from \"./exercises/index\";\r\nimport { Spacer, getInput } from \"../EOA-Functions\";\r\n\r\nlet exercises: Array<{ name: string; exerciseFn: () => void }> = [\r\n  {\r\n    name: \"ToDo App with CRUD Operations using map\",\r\n    exerciseFn: () => Exercise01(),\r\n  },\r\n  {\r\n    name: \"Iterate thru an array & remove even numbers from it using filter method\",\r\n    exerciseFn: () => Exercise02([22, 44, -55, -88, 11, 2, -5, -8, 200]),\r\n  },\r\n  {\r\n    name: \"Create new array storing values of given array, multiplied by 2\",\r\n    exerciseFn: () => Exercise03(),\r\n  },\r\n  {\r\n    name: \"Create new array storing values of given array, but if string length > 5\",\r\n    exerciseFn: () => Exercise04(),\r\n  },\r\n  {\r\n    name: \"Create a new array storing squared values of given array, if value is even\",\r\n    exerciseFn: () => Exercise05(),\r\n  },\r\n  {\r\n    name: \"Convert temperatures in °C in an array to °F using map, and store values in new array.\",\r\n    exerciseFn: () => Exercise06(),\r\n  },\r\n  {\r\n    name: \"Create a new array containing (odd values * 2) of old array | use map and filter methods\",\r\n    exerciseFn: () => Exercise07(),\r\n  },\r\n  {\r\n    name: \"Use forEach to iterate thru an array, and print values followed by exclamation mark(!)\",\r\n    exerciseFn: () => Exercise08(),\r\n  },\r\n];\r\n\r\nconsole.log(`/************************/`);\r\nconsole.log(`Choose Exercise #`);\r\nconsole.log(`/************************/`);\r\n\r\nexercises.forEach((element, index) => {\r\n  Spacer();\r\n  console.log(`${index + 1} - ${element[\"name\"]}`);\r\n});\r\n\r\nSpacer();\r\nconsole.log(`e - Exit`);\r\n\r\nSpacer();\r\nlet exercise_no = getInput(\"Enter Exercise # to Run: \");\r\n\r\nlet runExerciseNo =\r\n  exercise_no == \"e\" || (exercise_no >= 1 && exercise_no <= exercises.length);\r\n\r\nwhile (runExerciseNo == false) {\r\n  exercise_no = getInput(\"Please Enter Exercise # to Run: \");\r\n}\r\n\r\nlet exitProgram = exercise_no == `e`;\r\n\r\nwhile (!exitProgram) {\r\n  console.log(`==================`);\r\n  console.log(`Exercise ${exercise_no}: ${exercises[exercise_no - 1].name}`);\r\n  console.log(`==================`);\r\n\r\n  Spacer();\r\n  exercises[exercise_no - 1].exerciseFn();\r\n\r\n  Spacer(2);\r\n\r\n  getInput(\"Press Enter to Continue...\");\r\n\r\n  Spacer();\r\n\r\n  console.log(`/************************/`);\r\n  console.log(`Choose Exercise #`);\r\n  console.log(`/************************/`);\r\n\r\n  exercises.forEach((element, index) => {\r\n    Spacer();\r\n    console.log(`${index + 1} - ${element[\"name\"]}`);\r\n  });\r\n\r\n  Spacer();\r\n  console.log(`e - Exit`);\r\n  exercise_no = getInput(\"Enter Exercise # to Run: \");\r\n  exitProgram = exercise_no == \"e\";\r\n}\r\n\r\nconsole.log(`Exit`);\r\nprocess.exit(0);\r\n","import Exercise01 from \"./exercise-01\";\r\nimport Exercise02 from \"./exercise-02\";\r\nimport Exercise03 from \"./exercise-03\";\r\nimport Exercise04 from \"./exercise-04\";\r\nimport Exercise05 from \"./exercise-05\";\r\nimport Exercise06 from \"./exercise-06\";\r\nimport Exercise07 from \"./exercise-07\";\r\nimport Exercise08 from \"./exercise-08\";\r\n\r\nexport {\r\n  Exercise01,\r\n  Exercise02,\r\n  Exercise03,\r\n  Exercise04,\r\n  Exercise05,\r\n  Exercise06,\r\n  Exercise07,\r\n  Exercise08,\r\n};\r\n","// Exercise 01: Create a ToDo App and perform CRUD operations using map.\r\n\r\n// ============ getInput ============\r\n// Take Input from Console\r\n// getInput() also takes string for prompt message, but every keypress it re-prints the message in console,\r\n// so it's better to use console.log() to show prompt query\r\n\r\n// ============ Spacer ============\r\n// A custom function that takes an optional parameter as number to print empty console.log(),\r\n// if parameter is not specified it takes it as 1.\r\nimport { Spacer, getInput } from \"../../EOA-Functions/index\";\r\n\r\nconst Exercise01 = () => {\r\n  let todoTasks: Array<{ id: number; title: string; isComplete: boolean }> = [\r\n    { id: 0, title: \"Buy a new gaming laptop\", isComplete: false },\r\n    { id: 1, title: \"Complete Assignment\", isComplete: true },\r\n    { id: 2, title: \"Develop an app using Flutter\", isComplete: false },\r\n    { id: 3, title: \"Learn React & Next with TypeScript\", isComplete: false },\r\n  ];\r\n\r\n  const listTasks = (\r\n    tasks: Array<{ id: number; title: string; isComplete: boolean }>\r\n  ) => {\r\n    tasks.forEach((task, index) => {\r\n      console.log(\r\n        `${index + 1}. ${task.title} | Status: ${\r\n          task.isComplete ? \"Completed\" : \"Pending\"\r\n        }`\r\n      );\r\n    });\r\n  };\r\n\r\n  Spacer(2);\r\n  console.log(`Tasks =>`);\r\n  listTasks(todoTasks);\r\n\r\n  Spacer();\r\n\r\n  let action: string = \"\";\r\n\r\n  const getAction = () => {\r\n    Spacer(2);\r\n    console.log(`Actions:`);\r\n    console.log(`l - List Tasks`);\r\n    console.log(`a - Add New Task`);\r\n    console.log(`r - Remove Task`);\r\n    console.log(`u - Update Task Name/Status`);\r\n    console.log(`c - Clear All Tasks from List`);\r\n    console.log(`e - exit`);\r\n\r\n    Spacer();\r\n\r\n    action = getInput(\"Enter Action Shortcut => \");\r\n  };\r\n  getAction();\r\n\r\n  // Actions' Function\r\n  // Add\r\n  const addTask = (\r\n    array: Array<{ id: number; title: string; isComplete: boolean }>\r\n  ) => {\r\n    let title: string = getInput(\"Enter Task Title => \");\r\n\r\n    let exit: string = \"\";\r\n\r\n    if (title == \"\") {\r\n      console.log(`Task Title not Found`);\r\n      console.log(`Exiting function...`);\r\n    } else {\r\n      todoTasks.push({\r\n        id: array[array.length - 1].id + 1,\r\n        title: title,\r\n        isComplete: false,\r\n      });\r\n      Spacer();\r\n      console.log(`Item \"${title}\" with Status 'Pending' added to the List.`);\r\n      Spacer();\r\n    }\r\n  };\r\n\r\n  // Remove\r\n  const removeTaskFromList = (\r\n    array: Array<{ id: number; title: string; isComplete: boolean }>\r\n  ) => {\r\n    listTasks(array);\r\n    Spacer();\r\n    let taskID: number = getInput(\r\n      `Which Item # Do You Want to Remove? (1-${array.length}) => `\r\n    );\r\n\r\n    console.log(taskID);\r\n\r\n    if (isNaN(taskID)) {\r\n      console.log(`No Item Selected for Removal,`);\r\n      console.log(`Exiting function...`);\r\n      return;\r\n    }\r\n\r\n    todoTasks = array.filter((task) => {\r\n      if (task.id != taskID - 1) return task;\r\n    });\r\n\r\n    Spacer();\r\n    console.log(\"Removed\");\r\n  };\r\n\r\n  // Update\r\n  const updateTask = (\r\n    array: Array<{ id: number; title: string; isComplete: boolean }>\r\n  ) => {\r\n    listTasks(array);\r\n    Spacer();\r\n    let taskID = getInput(\r\n      `Which Item # Do You Want to Update? (1-${array.length}) `\r\n    );\r\n\r\n    if (taskID == null) {\r\n      console.log(`No Item Selected,`);\r\n      console.log(`Exiting function...`);\r\n      return;\r\n    }\r\n\r\n    taskID = Number(taskID);\r\n    taskID--;\r\n\r\n    console.log(`Leave empty if don't want to change.`);\r\n    let updatedTaskTitle: string = getInput(\"Updated Task Title => \");\r\n    Spacer();\r\n\r\n    // It is declared with datatype 'any' to reuse it for boolean result\r\n    let updatedStatus: any = getInput(\r\n      \"Updated Task Status\\nc - Complete | p - Pending\\n=> \"\r\n    );\r\n\r\n    if (updatedStatus == \"c\") {\r\n      updatedStatus == true;\r\n    } else if (updatedStatus == \"p\") {\r\n      updatedStatus = false;\r\n    } else {\r\n      console.log(`Invalid status shortcut given..`);\r\n      console.log(`Status Value remained unchanged`);\r\n      updatedStatus = todoTasks[taskID].isComplete;\r\n    }\r\n\r\n    todoTasks = todoTasks.map((task) => {\r\n      if (task.id == taskID) {\r\n        return {\r\n          id: task.id,\r\n          title: updatedTaskTitle == \"\" ? task.title : updatedTaskTitle,\r\n          isComplete: updatedStatus,\r\n        };\r\n      } else {\r\n        return task;\r\n      }\r\n    });\r\n\r\n    Spacer();\r\n    console.log(\"Updated\");\r\n  };\r\n\r\n  // Clear\r\n  const clearCart = () => {\r\n    todoTasks = [];\r\n    console.log(`All items are removed from cart.`);\r\n  };\r\n\r\n  let shouldExit = action == \"e\" ? false : true;\r\n\r\n  while (shouldExit) {\r\n    switch (action) {\r\n      case \"a\": {\r\n        // add new item\r\n        addTask(todoTasks);\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      case \"l\": {\r\n        // List all Items in Cart\r\n        listTasks(todoTasks);\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      case \"r\": {\r\n        // remove existing items from the cart\r\n        removeTaskFromList(todoTasks);\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      case \"u\": {\r\n        // update quantities of an item already present on the cart\r\n        updateTask(todoTasks);\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      case \"c\": {\r\n        // clear all items from the cart\r\n        clearCart();\r\n        Spacer();\r\n        getAction();\r\n        break;\r\n      }\r\n      default: {\r\n        action = getInput(\"Invalid Shortcut, Please Try Again => \");\r\n        break;\r\n      }\r\n    }\r\n    shouldExit = action == \"e\" ? false : true;\r\n  }\r\n  console.log(`Exited`);\r\n};\r\n\r\n// TODO: Uncomment statement below to run function from this file\r\n// Exercise01();\r\n\r\nexport default Exercise01;\r\n","import Spacer from \"./spacer\";\r\nimport getInput from \"./getInput\";\r\n\r\nexport { Spacer, getInput };\r\n","const Spacer = (numOfSpaces?: number) => {\r\n  if (numOfSpaces == undefined) {\r\n    console.log();\r\n  } else {\r\n    for (let i = 1; i <= numOfSpaces; i++) {\r\n      console.log();\r\n    }\r\n  }\r\n};\r\n\r\nexport default Spacer;\r\n","const getInput = require(\"prompt-sync\")({ sigint: true });\r\n\r\nexport default getInput;\r\n","// Exercise 02: Write a program that uses filter to remove all negative numbers from an array of numbers.\r\n\r\n// ============ Spacer ============\r\n// A custom function that takes an optional parameter as number to print empty console.log(),\r\n// if parameter is not specified it takes it as 1.\r\n\r\n// ============ getInput ============\r\n// Take Input from Console\r\n// getInput() also takes string for prompt message, but every keypress it re-prints the message in console,\r\n// so it's better to use console.log() to show prompt query\r\nimport { getInput } from \"../../EOA-Functions/index\";\r\n\r\nconst Exercise02 = (array?: number[]) => {\r\n  console.log(`Options:`);\r\n  console.log(`1. Take Input Here`);\r\n  console.log(`2. Use Pre-Defined Values`);\r\n\r\n  let numArr: number[] = [];\r\n\r\n  let choice: number = +getInput(\"Choose Options (1-2) => \");\r\n\r\n  // checks whether choice is 1 or 2, if not. It re-execute the statements\r\n  while ([1, 2].indexOf(choice) == -1) {\r\n    choice = +getInput(\"Please Choose Options (1-2) => \");\r\n  }\r\n\r\n  // Take Input Here\r\n  if (choice == 1) {\r\n    console.log(`Enter Integers separated by single space =>`);\r\n\r\n    // Take user input as numbers separated by single space\r\n    // splits it to form an array\r\n    // pushing each item of that array to numArr array & converting item value to typeof Number\r\n    getInput()\r\n      .split(\" \")\r\n      .forEach((element: string) => {\r\n        if (!isNaN(Number(element))) {\r\n          numArr.push(Number(element));\r\n        }\r\n      });\r\n\r\n    // Uses while loop to detect empty input\r\n    // it keeps prompting until non-empty input is found.\r\n    while (numArr.length == 0) {\r\n      console.log(`Enter Integers separated by single space =>`);\r\n      getInput()\r\n        .split(\" \")\r\n        .forEach((element: string) => {\r\n          if (!isNaN(Number(element))) {\r\n            numArr.push(Number(element));\r\n          }\r\n        });\r\n    }\r\n  } else {\r\n    // generate ten random integers in values array\r\n    numArr = array!;\r\n  }\r\n\r\n  console.log(`Initial Array => `, numArr);\r\n\r\n  numArr = numArr.filter((num) => {\r\n    return num > 1;\r\n  });\r\n\r\n  console.log(`Array w/o Negative Numbers => `, numArr);\r\n};\r\n\r\n// TODO: Uncomment statement below to run function from this file\r\n// Exercise02([22, 44, -55, -88, 11, 2, -5, -8, 200]);\r\n\r\nexport default Exercise02;\r\n","// Exercise 03: Given an array of numbers [1, 2, 3, 4, 5], use the map method to create a new array where each value is multiplied by 2.\r\n\r\n// ============ Spacer ============\r\n// A custom function that takes an optional parameter as number to print empty console.log(),\r\n// if parameter is not specified it takes it as 1.\r\nimport { Spacer } from \"../../EOA-Functions/index\";\r\n\r\nconst Exercise03 = (array: number[] = [1, 2, 3, 4, 5]) => {\r\n  Spacer();\r\n  console.log(`Initial Array => `, array);\r\n\r\n  let numArr: number[] = array.map((num) => num * 2);\r\n\r\n  Spacer(2);\r\n  console.log(`New Array with values multiplied by 2 =>`);\r\n  console.log(numArr);\r\n  Spacer();\r\n};\r\n\r\n// TODO: Uncomment statement below to run function from this file\r\n// Exercise03();\r\n\r\nexport default Exercise03;\r\n","// Exercise 04: Given an array of strings [\"apple\", \"banana\", \"cherry\", \"date\", \"grape\"], use the filter method to create a new array containing only the fruits with more than 5 characters.\r\n\r\n// ============ Spacer ============\r\n// A custom function that takes an optional parameter as number to print empty console.log(),\r\n// if parameter is not specified it takes it as 1.\r\nimport { Spacer } from \"../../EOA-Functions/index\";\r\n\r\nconst Exercise04 = (\r\n  array: string[] = [\"apple\", \"banana\", \"cherry\", \"date\", \"grape\"]\r\n) => {\r\n  Spacer();\r\n  console.log(`Initial Array => `, array);\r\n\r\n  let lengthFilter: string[] = array.filter((word) => word.length > 5);\r\n\r\n  Spacer(2);\r\n  console.log(`New Array with strings of length > 5 =>`);\r\n  console.log(lengthFilter);\r\n  Spacer();\r\n};\r\n\r\n// TODO: Uncomment statement below to run function from this file\r\n// Exercise04();\r\n\r\nexport default Exercise04;\r\n","// Exercise 05: Given an array of numbers [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], use the map and filter methods together to create a new array containing squares of even numbers.\r\n\r\n// ============ Spacer ============\r\n// A custom function that takes an optional parameter as number to print empty console.log(),\r\n// if parameter is not specified it takes it as 1.\r\nimport { Spacer } from \"../../EOA-Functions/index\";\r\n\r\nconst Exercise05 = (array: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) => {\r\n  Spacer();\r\n  console.log(`Initial Array => `, array);\r\n\r\n  let SqrdEvenNums: number[] = array\r\n    .filter((num) => !(num % 2))\r\n    .map((num) => num ** 2);\r\n\r\n  Spacer(2);\r\n  console.log(`New Array with squared value of even numbers =>`);\r\n  console.log(SqrdEvenNums);\r\n  Spacer();\r\n};\r\n\r\n// TODO: Uncomment statement below to run function from this file\r\n// Exercise05();\r\n\r\nexport default Exercise05;\r\n","// Exercise 06: Given an array of temperature in Celsius, [0, 10, 20, 30, 40], use the map method to create a new array where each temperature is converted to Fahrenheit using the formula (Celsius * 9/5) + 32\r\n\r\n// ============ Spacer ============\r\n// A custom function that takes an optional parameter as number to print empty console.log(),\r\n// if parameter is not specified it takes it as 1.\r\nimport { Spacer } from \"../../EOA-Functions/index\";\r\n\r\nconst Exercise06 = (array: number[] = [0, 10, 20, 30, 40]) => {\r\n  Spacer();\r\n  console.log(`Temperatures in °C => `, array);\r\n\r\n  let TempF: number[] = array.map((temp) =>\r\n    Number((temp * (9 / 5) + 32).toFixed(2))\r\n  );\r\n\r\n  Spacer(2);\r\n  console.log(`Temperatures in °F =>`, TempF);\r\n  Spacer();\r\n};\r\n\r\n// TODO: Uncomment statement below to run function from this file\r\n// Exercise06();\r\n\r\nexport default Exercise06;\r\n","// Exercise 07: Given an array of numbers [3, 6, 9, 12, 15, 18], use the map and filter methods together to create a new array containing the doubled values of odd numbers.\r\n\r\n// ============ Spacer ============\r\n// A custom function that takes an optional parameter as number to print empty console.log(),\r\n// if parameter is not specified it takes it as 1.\r\nimport { Spacer } from \"../../EOA-Functions/index\";\r\n\r\nconst Exercise07 = (array: number[] = [3, 6, 9, 12, 15, 18]) => {\r\n  Spacer();\r\n  console.log(`Initial Array => `, array);\r\n\r\n  let doubledOddNums: number[] = array\r\n    .filter((num) => num % 2)\r\n    .map((num) => num * 2);\r\n\r\n  Spacer(2);\r\n  console.log(`New Array with Doubled Values of Odd Numbers =>`);\r\n  console.log(doubledOddNums);\r\n  Spacer();\r\n};\r\n\r\n// TODO: Uncomment statement below to run function from this file\r\n// Exercise07();\r\n\r\nexport default Exercise07;\r\n","// Exercise 08: Given an array of names [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Emily\"], use the forEach method to log each name with an exclamation mark at the end, e.g., \"Alice!\".\r\n\r\n// ============ Spacer ============\r\n// A custom function that takes an optional parameter as number to print empty console.log(),\r\n// if parameter is not specified it takes it as 1.\r\nimport { Spacer } from \"../../EOA-Functions/index\";\r\n\r\nconst Exercise08 = (\r\n  array: string[] = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Emily\"]\r\n) => {\r\n  Spacer();\r\n  console.log(`Array =>`, array);\r\n  Spacer();\r\n\r\n  console.log(`Names with '!' =>`);\r\n  array.forEach((name) => console.log(`${name}!`));\r\n};\r\n\r\n// TODO: Uncomment statement below to run function from this file\r\n// Exercise08();\r\n\r\nexport default Exercise08;\r\n"],"names":[],"version":3,"file":"index.js.map"}